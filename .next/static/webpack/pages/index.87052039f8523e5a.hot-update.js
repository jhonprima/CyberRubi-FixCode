"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./pages/index.tsx":
/*!*************************!*\
  !*** ./pages/index.tsx ***!
  \*************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/router */ \"./node_modules/next/router.js\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"./node_modules/uuid/dist/esm-browser/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ var _s = $RefreshSig$();\n\n\n\nfunction Home() {\n    _s();\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter)();\n    const [query, setQuery] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [username, setUsername] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [userId, setUserId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [showSidebar, setShowSidebar] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [isMobile, setIsMobile] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isInitialized, setIsInitialized] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isNewChat, setIsNewChat] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(true);\n    const [messageState, setMessageState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(()=>({\n            messages: [\n                {\n                    message: \"Halo!!, Apa yang ingin kamu tanyakan ?\",\n                    type: \"apiMessage\"\n                }\n            ],\n            history: []\n        }));\n    const [chatHistory, setChatHistory] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]);\n    const [activeChatId, setActiveChatId] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"\");\n    const messageListRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const textAreaRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const handleResize = ()=>{\n            const mobile = window.innerWidth <= 768;\n            setIsMobile(mobile);\n            if (mobile && showSidebar) {\n                setShowSidebar(false);\n            }\n        };\n        handleResize();\n        window.addEventListener(\"resize\", handleResize);\n        return ()=>window.removeEventListener(\"resize\", handleResize);\n    }, [\n        showSidebar\n    ]);\n    const generateSessionId = ()=>\"session_\".concat(Date.now(), \"_\").concat((0,uuid__WEBPACK_IMPORTED_MODULE_2__.v4)().substring(0, 8));\n    // Initialize user session and chats\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        const initializeApp = async ()=>{\n            try {\n                const storedUser = localStorage.getItem(\"user\");\n                if (!storedUser) {\n                    router.push(\"/login\");\n                    return;\n                }\n                const userData = JSON.parse(storedUser);\n                if (!userData.name || !userData.id) {\n                    throw new Error(\"Invalid user data\");\n                }\n                setUsername(userData.name);\n                setUserId(userData.id);\n                const loadChatHistory = async ()=>{\n                    try {\n                        const res = await fetch(\"/api/user-chats?user_id=\".concat(userData.id));\n                        if (!res.ok) throw new Error(\"Failed to load chats\");\n                        const data = await res.json();\n                        // Ensure data is an array before setting state\n                        const chats = Array.isArray(data) ? data : [];\n                        setChatHistory(chats);\n                        return chats;\n                    } catch (err) {\n                        console.error(\"Error loading chat history:\", err);\n                        setChatHistory([]);\n                        return [];\n                    }\n                };\n                const loadedChats = await loadChatHistory();\n                // Initialize active chat\n                let activeId = localStorage.getItem(\"activeChatId\");\n                if (!activeId || !loadedChats.some((chat)=>chat.id === activeId)) {\n                    activeId = generateSessionId();\n                    setIsNewChat(true);\n                    // Add to chat history\n                    setChatHistory((prev)=>[\n                            ...prev,\n                            {\n                                id: activeId,\n                                title: \"Chat Baru\"\n                            }\n                        ]);\n                    try {\n                        await fetch(\"/api/create-chat\", {\n                            method: \"POST\",\n                            headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                            body: JSON.stringify({\n                                user_id: userData.id,\n                                chat_id: activeId,\n                                title: \"Chat Baru\"\n                            })\n                        });\n                    } catch (err) {\n                        console.error(\"Failed to create new chat:\", err);\n                    }\n                } else {\n                    setIsNewChat(false);\n                }\n                setActiveChatId(activeId);\n                // Load chat state\n                const savedState = localStorage.getItem(\"chat_state_\".concat(activeId));\n                if (savedState) {\n                    try {\n                        const parsedState = JSON.parse(savedState);\n                        if (parsedState.messages && parsedState.history) {\n                            setMessageState(parsedState);\n                            if (parsedState.messages.length > 1) {\n                                setIsNewChat(false);\n                            }\n                        }\n                    } catch (err) {\n                        console.error(\"Error parsing saved state:\", err);\n                    }\n                }\n                // Load sidebar preference\n                const sidebarPref = localStorage.getItem(\"showSidebar\");\n                if (sidebarPref !== null) {\n                    setShowSidebar(sidebarPref === \"true\");\n                } else {\n                    setShowSidebar(!isMobile);\n                }\n                setIsInitialized(true);\n            } catch (err) {\n                console.error(\"Initialization error:\", err);\n                localStorage.removeItem(\"user\");\n                router.push(\"/login\");\n            }\n        };\n        // inisialisasi fungsi yang akan menjadi ebberapa yang sudah  seui dengan beberappa hal uang suah enjadi kebiasaan di dalam kehidu0an\n        if (!isInitialized) {\n            initializeApp();\n        }\n    }, [\n        router,\n        isMobile,\n        isInitialized\n    ]);\n    // Save chat state to localStorage\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (isInitialized && activeChatId) {\n            const saveData = {\n                messages: messageState.messages,\n                history: messageState.history,\n                timestamp: Date.now()\n            };\n            localStorage.setItem(\"chat_state_\".concat(activeChatId), JSON.stringify(saveData));\n        }\n    }, [\n        messageState,\n        activeChatId,\n        isInitialized\n    ]);\n    // Auto-scroll to bottom when messages change\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        if (messageListRef.current) {\n            messageListRef.current.scrollTo({\n                top: messageListRef.current.scrollHeight,\n                behavior: \"smooth\"\n            });\n        }\n    }, [\n        messageState.messages\n    ]);\n    const toggleSidebar = ()=>{\n        const newValue = !showSidebar;\n        setShowSidebar(newValue);\n        localStorage.setItem(\"showSidebar\", newValue.toString());\n    };\n    const createNewChat = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!userId) {\n            setError(\"User ID tidak valid. Silakan login kembali.\");\n            return;\n        }\n        setLoading(true);\n        const newChatId = generateSessionId();\n        const newChat = {\n            id: newChatId,\n            title: \"Chat Baru\"\n        };\n        try {\n            const response = await fetch(\"/api/create-chat\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    user_id: userId,\n                    chat_id: newChatId,\n                    title: newChat.title\n                })\n            });\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || \"Failed to create chat\");\n            }\n            setChatHistory((prev)=>[\n                    ...prev,\n                    newChat\n                ]);\n            setActiveChatId(newChatId);\n            localStorage.setItem(\"activeChatId\", newChatId);\n            setMessageState({\n                messages: [\n                    {\n                        message: \"Halo!!, Apa yang ingin kamu tanyakan ?\",\n                        type: \"apiMessage\"\n                    }\n                ],\n                history: []\n            });\n            setIsNewChat(true);\n            if (isMobile) setShowSidebar(false);\n            setTimeout(()=>{\n                var _textAreaRef_current;\n                return (_textAreaRef_current = textAreaRef.current) === null || _textAreaRef_current === void 0 ? void 0 : _textAreaRef_current.focus();\n            }, 100);\n        } catch (error) {\n            console.error(\"Error creating chat:\", error);\n            setError(error instanceof Error ? error.message : \"Gagal membuat chat baru\");\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        userId,\n        isMobile\n    ]);\n    const switchChat = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)((chatId)=>{\n        setActiveChatId(chatId);\n        localStorage.setItem(\"activeChatId\", chatId);\n        const savedState = localStorage.getItem(\"chat_state_\".concat(chatId));\n        if (savedState) {\n            try {\n                const parsedState = JSON.parse(savedState);\n                if (parsedState.messages && parsedState.history) {\n                    setMessageState(parsedState);\n                    setIsNewChat(parsedState.messages.length <= 1);\n                } else {\n                    setMessageState({\n                        messages: [\n                            {\n                                message: \"Halo!!, Apa yang ingin kamu tanyakan ?\",\n                                type: \"apiMessage\"\n                            }\n                        ],\n                        history: []\n                    });\n                    setIsNewChat(true);\n                }\n            } catch (e) {\n                setMessageState({\n                    messages: [\n                        {\n                            message: \"Halo!!, Apa yang ingin kamu tanyakan ?\",\n                            type: \"apiMessage\"\n                        }\n                    ],\n                    history: []\n                });\n                setIsNewChat(true);\n            }\n        }\n        if (isMobile) setShowSidebar(false);\n        setTimeout(()=>{\n            var _textAreaRef_current;\n            return (_textAreaRef_current = textAreaRef.current) === null || _textAreaRef_current === void 0 ? void 0 : _textAreaRef_current.focus();\n        }, 100);\n    }, [\n        isMobile\n    ]);\n    const handleLogout = ()=>{\n        localStorage.clear();\n        router.push(\"/login\");\n    };\n    const handleSubmit = async (e)=>{\n        e.preventDefault();\n        const question = query.trim();\n        if (!question) {\n            setError(\"Masukkan pertanyaan Anda\");\n            return;\n        }\n        if (!userId || !activeChatId) {\n            setError(\"Session tidak valid\");\n            return;\n        }\n        setError(null);\n        const userMessage = {\n            type: \"userMessage\",\n            message: question\n        };\n        setMessageState((prev)=>({\n                ...prev,\n                messages: [\n                    ...prev.messages,\n                    userMessage\n                ]\n            }));\n        setLoading(true);\n        setQuery(\"\");\n        setIsNewChat(false);\n        try {\n            var _chatHistory_find;\n            const controller = new AbortController();\n            const timeoutId = setTimeout(()=>controller.abort(), 30000);\n            const response = await fetch(\"/api/chat\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    user_id: userId,\n                    chat_id: activeChatId,\n                    title: ((_chatHistory_find = chatHistory.find((c)=>c.id === activeChatId)) === null || _chatHistory_find === void 0 ? void 0 : _chatHistory_find.title) || question.slice(0, 30) || \"Percakapan Baru\",\n                    question,\n                    history: messageState.history\n                }),\n                signal: controller.signal\n            });\n            clearTimeout(timeoutId);\n            if (!response.ok) {\n                const errorData = await response.json();\n                throw new Error(errorData.error || \"Request failed\");\n            }\n            const data = await response.json();\n            // Update chat title if first real message\n            if (messageState.messages.length === 1 && messageState.messages[0].message.includes(\"Halo\")) {\n                const newTitle = question.length > 20 ? question.slice(0, 20) + \"...\" : question;\n                setChatHistory((prev)=>prev.map((c)=>c.id === activeChatId ? {\n                            ...c,\n                            title: newTitle\n                        } : c));\n            }\n            setMessageState((prev)=>({\n                    messages: [\n                        ...prev.messages,\n                        {\n                            type: \"apiMessage\",\n                            message: data.text,\n                            sourceDocs: data.sourceDocuments\n                        }\n                    ],\n                    history: [\n                        ...prev.history,\n                        [\n                            question,\n                            data.text\n                        ]\n                    ]\n                }));\n        } catch (err) {\n            console.error(\"Chat error:\", err);\n            let errorMessage = \"Terjadi kesalahan\";\n            if (err instanceof Error) {\n                errorMessage = err.name === \"AbortError\" ? \"Permintaan timeout\" : err.message || \"Terjadi kesalahan\";\n            }\n            setError(errorMessage);\n            setQuery(question);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const handleEnter = (e)=>{\n        if (e.key === \"Enter\" && !e.shiftKey && !loading) {\n            e.preventDefault();\n            handleSubmit(e);\n        }\n    };\n}\n_s(Home, \"kr6QpO8LeCIS8nptmnvE9mBB270=\", false, function() {\n    return [\n        next_router__WEBPACK_IMPORTED_MODULE_1__.useRouter\n    ];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.tsx\n"));

/***/ })

});